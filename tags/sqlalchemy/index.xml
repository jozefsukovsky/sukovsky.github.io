<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sqlalchemy on Jozef Sukovsky</title>
    <link>https://sukovsky.com/tags/sqlalchemy/</link>
    <description>Recent content in Sqlalchemy on Jozef Sukovsky</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Â© Jozef Sukovsky</copyright>
    <lastBuildDate>Wed, 20 Mar 2024 19:20:00 +0000</lastBuildDate>
    <atom:link href="https://sukovsky.com/tags/sqlalchemy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Stress-testing Django, Django REST framework, FastAPI, Express.js, Go-chi and Axum</title>
      <link>https://sukovsky.com/posts/5-stress-testing-django-drf-fastapi-expressjs-go-chi-axum/</link>
      <pubDate>Wed, 20 Mar 2024 19:20:00 +0000</pubDate>
      <guid>https://sukovsky.com/posts/5-stress-testing-django-drf-fastapi-expressjs-go-chi-axum/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;&#xA;&lt;p&gt;While working with different stack combinations, I sometimes wonder about the true throughput/performance of each solution. It is not straightforward to compare them because every product is unique and possesses different features and design choices. However, some things can still be compared, even though not everything will be a fair comparison. This will be comparing apples with pears, plums and other fruits to get an idea of the capacity.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Django user trying out FastAPI</title>
      <link>https://sukovsky.com/posts/4-django-user-trying-out-fastapi/</link>
      <pubDate>Thu, 27 May 2021 20:20:00 +0000</pubDate>
      <guid>https://sukovsky.com/posts/4-django-user-trying-out-fastapi/</guid>
      <description>&lt;p&gt;Django was my first choice for many years. But building new API-driven products using Django and Django REST Framework never brought that pleasing feeling I would like to feel.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-good-the-bad-and-the-ugly&#34;&gt;The Good, the Bad and the Ugly&lt;/h2&gt;&#xA;&lt;p&gt;It&amp;rsquo;s been around 2007 I stumbled upon &lt;a href=&#34;https://www.djangoproject.com/&#34;&gt;Django framework&lt;/a&gt;. Needed to build a very simple image gallery, nothing serious. And since then, every time I had to do something to be displayed on the web, Django was my first choice. What was a big deal for me was it&amp;rsquo;s ORM, &lt;code&gt;contrib.auth&lt;/code&gt; and &lt;code&gt;contrib.admin&lt;/code&gt;. Going up with and running in minutes, having some database models done really fast and being able to fill the tables with some test data right away was always a pleasing experience.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
